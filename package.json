
{
  "name": "jewelry-website",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev": "cross-env NEXT_DISABLE_TURBOPACK=1 next dev",
    "dev:baseline": "cross-env NEXT_DISABLE_TURBOPACK=1 next dev -p 3000",
    "dev:sandbox": "powershell -NoProfile -Command \"$sb=$env:SANDBOX_PATH; if (-not $sb) { $sb='C:\\\\Users\\\\dimam\\\\OneDrive\\\\Desktop\\\\Jewelry.Website\\\\sandbox-20250820-183517' }; if (Test-Path $sb) { Push-Location $sb; $env:SANDBOX='1'; $env:NEXT_DISABLE_TURBOPACK='1'; $env:NEXT_DISABLE_REACT_DEV_OVERLAY='1'; $env:NEXT_DISABLE_ERROR_OVERLAY='1'; next dev -p 3001; Pop-Location } else { Write-Host 'Sandbox not found: ' $sb; exit 2 }\"",
    "dev:safe": "npm run ports:free && concurrently -n base,sbx -c auto \"npm run dev:baseline\" \"npm run start:sandbox\"",
    "dev:both": "npm run ports:free && concurrently -n base,sbx -c auto \"npm run dev:baseline\" \"npm run dev:sandbox\"",
    "build": "next build",
    "smoke:all": "npm run agent:status && npm run health:check && npm run console:check:sandbox",
    "test-ci-flow": "node scripts/test-ci-flow.js",
    "start": "next start",
    "lint": "next lint",
    "lint:ci": "next lint --max-warnings=0",
    "lint:no-typescript": "eslint src --ext .js,.jsx,.ts,.tsx --max-warnings 20",
    "analyze": "cross-env ANALYZE=true next build",
    "size-limit": "node scripts/check-bundle-size.js",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:ci": "jest --config=jest.config.js --ci --coverage --watchAll=false --no-cache",
    "test:e2e": "playwright test",
    "test:e2e:ui": "playwright test --ui",
    "cypress": "cypress open",
    "cypress:run": "cypress run",
    "cypress:headless": "cypress run",
    "test:lighthouse": "npm run lighthouse:ci",
    "db:generate": "prisma generate",
    "db:push": "prisma db push",
    "db:migrate": "prisma migrate dev",
    "db:seed": "tsx prisma/seed.ts",
    "db:studio": "prisma studio",
    "db:reset": "prisma migrate reset",
    "db:deploy": "prisma migrate deploy",
    "type-check": "tsc --noEmit",
    "type-check:strict": "tsc --noEmit --skipLibCheck",
    "type-check:ci": "tsc --project tsconfig.ci.json --noEmit --skipLibCheck --pretty",
    "type-check:with-prisma": "npm run db:generate && npm run type-check:strict",
    "type-check:fix": "node scripts/fix-typescript-errors.js",
    "type-check:workflow": "tsc --project tsconfig.workflow.json",
    "format": "prettier --write .",
    "format:check": "prettier --check .",
    "lint:fix": "next lint --fix",
    "clean": "powershell -NoProfile -Command \"Remove-Item -Recurse -Force .next, out 2>$null; exit 0\"",
    "prebuild": "echo 'Running build with type checking and linting enabled' && npx prisma generate",
    "debug:prisma": "node scripts/debug-prisma.js",
    "postbuild": "npm run size-limit || true",
    "web-vitals-check": "node scripts/web-vitals-guard.js",
    "pre-commit": "npm run web-vitals-check && npm run lint && npm run type-check:strict",
    "lighthouse": "lighthouse http://localhost:3000 --output json --output-path ./lighthouse-report.json",
    "lighthouse:ci": "lighthouse http://localhost:3000 --only-categories=performance --output json --output-path ./lighthouse-report.json",
    "lighthouse:html": "lighthouse http://localhost:3000 --output html --output-path ./lighthouse-report.html",
    "optimize:hero": "node scripts/optimize-hero-images.mjs",
    "build:prod": "npm run build",
    "start:prod": "npm run start",
    "perf:lighthouse": "npm run build:prod && (npm run start:prod & npx wait-on http://localhost:3000) && lighthouse http://localhost:3000 --output json --output-path ./perf/lh-report.json --output html --output-path ./perf/lh-report.html && npm run stop",
    "ports:free": "kill-port 3000 3001",
    "start:baseline": "node .next/standalone/server.js -p 3000",
    "build:sandbox": "powershell -NoProfile -Command \"$sb=$env:SANDBOX_PATH; if (-not $sb) { $sb='C:\\\\Users\\\\dimam\\\\OneDrive\\\\Desktop\\\\Jewelry.Website\\\\sandbox-20250820-183517' }; if (Test-Path $sb) { Push-Location $sb; npm ci; npm run build; Pop-Location } else { Write-Host 'Sandbox not found: ' $sb; exit 2 }\"",
    "start:sandbox": "powershell -NoProfile -Command \"$sb=$env:SANDBOX_PATH; if (-not $sb) { $sb='C:\\\\Users\\\\dimam\\\\OneDrive\\\\Desktop\\\\Jewelry.Website\\\\sandbox-20250820-183517' }; if (Test-Path $sb) { Push-Location $sb; $env:SANDBOX='1'; npm run start -- -p 3001; Pop-Location } else { Write-Host 'Sandbox not found: ' $sb; exit 2 }\"",
    "build:both": "concurrently -n build:base,build:sbx \"npm run build\" \"npm run build:sandbox\"",
    "sandbox:patch": "powershell -NoProfile -Command \"$sb=$env:SANDBOX_PATH; if (-not $sb) { $sb='C:\\\\Users\\\\dimam\\\\OneDrive\\\\Desktop\\\\Jewelry.Website\\\\sandbox-20250820-183517' }; if (Test-Path $sb) { Push-Location $sb; git diff --binary > ..\\sandbox-change.patch; Write-Host 'Wrote ..\\sandbox-change.patch'; Pop-Location } else { Write-Host 'Sandbox not found: ' $sb; exit 2 }\"",
    "sandbox:apply": "powershell -NoProfile -Command \"if (Test-Path '..\\sandbox-change.patch'){ git apply --check ..\\sandbox-change.patch && git apply --index ..\\sandbox-change.patch } else { Write-Host 'No patch file'; exit 2 }\"",
    "start:both": "npm run ports:free && concurrently -n base,sbx -c auto \"npm run start:baseline\" \"npm run start:sandbox\"",
    "run:both": "npm run ports:free && npm run build:both && npm run start:both",
    "stop": "kill-port 3000 3001",
    "status": "node -e \"(async()=>{for (const u of ['http://localhost:3000/','http://localhost:3001/']){try{const r=await fetch(u);console.log(u+' -> '+r.status)}catch{console.log(u+' -> FAIL')}})()\"",
    "health:check": "node scripts/enhanced-health-check.js",
    "health:check:sandbox": "cross-env HEALTHCHECK_URL=http://localhost:3001 node scripts/enhanced-health-check.js",
    "health:check:baseline": "cross-env HEALTHCHECK_URL=http://localhost:3000 node scripts/enhanced-health-check.js",
    "pre:deploy": "node scripts/pre-deployment-check.js",
    "monitor:start": "node scripts/enhanced-health-check.js && echo 'Monitoring started - run this in a loop for continuous monitoring'",
    "monitor:continuous": "while true; do npm run health:check; sleep 30; done",
    "console:check": "npm run test:e2e -- --grep \"Console Error Monitoring\"",
    "console:check:sandbox": "cross-env BASE_URL=http://localhost:3001 npm run test:e2e -- --grep \"Console Error Monitoring\"",
    "console:check:baseline": "cross-env BASE_URL=http://localhost:3000 npm run test:e2e -- --grep \"Console Error Monitoring\"",
    "monitor:full": "npm run health:check && npm run console:check",
    "monitor:full:sandbox": "npm run health:check:sandbox && npm run console:check:sandbox",
    "monitor:full:baseline": "npm run health:check:baseline && npm run console:check:baseline",
    "dev:helper": "node scripts/dev-helper.js",
    "bundle:analyze": "cross-env ANALYZE=true npm run build",
    "check:bundle-size": "node scripts/check-bundle-size.js",
    "test:workflows": "act push",
    "test:workflows:local": "node scripts/test-workflows-local.js",
    "test:workflows:ci": "node scripts/test-workflows-local.js ci-and-deploy",
    "test:workflows:test": "node scripts/test-workflows-local.js test",
    "test:workflows:perf": "node scripts/test-workflows-local.js performance",
    "test:workflows:ui": "node scripts/test-workflows-local.js ui-pr",
    "test:workflows:error": "node scripts/test-workflows-local.js error-monitoring",
    "test:workflows:all": "node scripts/test-workflows-local.js",
    "test:performance": "act push -W .github/workflows/performance.yml",
    "test:ui": "act push -W .github/workflows/ui-pr.yml",
    "test:all": "act push",
    "workflow:debug": "act push --verbose",
    "workflow:list": "act -l",
    "workflow:setup": "echo 'Installing act CLI...' && echo 'Download from: https://github.com/nektos/act/releases' && echo 'Or use: choco install act-cli (Windows with Chocolatey)'",
    "workflow:setup:auto": "node scripts/setup-github-actions-local.js"
  },
  "size-limit": [
    {
      "path": ".next/static/chunks/*.js",
      "limit": "2000 kB",
      "name": "First Load JS"
    },
    {
      "path": ".next/static/chunks/vendors-*.js",
      "limit": "1500 kB",
      "name": "Vendor Bundle"
    },
    {
      "path": ".next/static/chunks/react-*.js",
      "limit": "500 kB",
      "name": "React Bundle"
    },
    {
      "path": ".next/static/chunks/common-*.js",
      "limit": "300 kB",
      "name": "Common Bundle"
    }
  ],
  "dependencies": {
    "@auth/prisma-adapter": "^2.10.0",
    "@hookform/resolvers": "^3.3.2",
    "@next/bundle-analyzer": "^14.2.31",
    "@prisma/client": "^5.0.0",
    "@radix-ui/react-accordion": "^1.1.2",
    "@radix-ui/react-alert-dialog": "^1.0.5",
    "@radix-ui/react-avatar": "^1.0.4",
    "@radix-ui/react-checkbox": "^1.0.4",
    "@radix-ui/react-dialog": "^1.0.5",
    "@radix-ui/react-dropdown-menu": "^2.0.6",
    "@radix-ui/react-icons": "^1.3.2",
    "@radix-ui/react-label": "^2.0.2",
    "@radix-ui/react-navigation-menu": "^1.2.14",
    "@radix-ui/react-popover": "^1.0.7",
    "@radix-ui/react-progress": "^1.0.3",
    "@radix-ui/react-radio-group": "^1.1.3",
    "@radix-ui/react-scroll-area": "^1.0.5",
    "@radix-ui/react-select": "^2.0.0",
    "@radix-ui/react-separator": "^1.0.3",
    "@radix-ui/react-slot": "^1.0.2",
    "@radix-ui/react-switch": "^1.0.3",
    "@radix-ui/react-tabs": "^1.0.4",
    "@radix-ui/react-toast": "^1.1.5",
    "@radix-ui/react-tooltip": "^1.0.7",
    "@stripe/react-stripe-js": "^3.9.0",
    "@stripe/stripe-js": "^2.4.0",
    "@testing-library/jest-dom": "^6.7.0",
    "@testing-library/react": "^16.3.0",
    "@vercel/analytics": "^1.5.0",
    "@vercel/speed-insights": "^1.2.0",
    "autoprefixer": "^10.4.16",
    "bcryptjs": "^3.0.2",
    "class-variance-authority": "^0.7.0",
    "clsx": "^2.0.0",
    "cmdk": "^1.1.1",
    "compression-webpack-plugin": "^11.1.0",
    "critters": "^0.0.23",
    "date-fns": "^4.1.0",
    "framer-motion": "^10.16.4",
    "jest-axe": "^10.0.0",
    "lucide-react": "^0.292.0",
    "next": "14.2.31",
    "next-auth": "^4.24.0",
    "node-fetch": "^3.3.2",
    "otplib": "^12.0.1",
    "pino": "^9.9.0",
    "postcss": "^8.4.31",
    "prom-client": "^15.1.3",
    "qrcode": "^1.5.4",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-dropzone": "^14.3.8",
    "react-hook-form": "^7.47.0",
    "react-hot-toast": "^2.4.1",
    "react-is": "^18.3.1",
    "recharts": "^3.1.2",
    "sharp": "^0.34.3",
    "stripe": "^14.25.0",
    "tailwind-merge": "^2.0.0",
    "tailwindcss": "^3.3.5",
    "tailwindcss-animate": "^1.0.7",
    "xlsx": "^0.18.5",
    "zod": "^3.22.4",
    "zustand": "^5.0.7"
  },
  "devDependencies": {
    "@lhci/cli": "^0.12.0",
    "@playwright/test": "^1.40.0",
    "@size-limit/preset-app": "^11.2.0",
    "@testing-library/dom": "^10.4.1",
    "@types/jest": "^29.5.0",
    "@types/jest-axe": "^3.5.9",
    "@types/node": "^20.19.11",
    "@types/qrcode": "^1.5.5",
    "@types/react": "^18.3.24",
    "@types/react-dom": "^18.3.7",
    "concurrently": "^9.2.0",
    "cross-env": "^10.0.0",
    "cypress": "^13.6.0",
    "eslint": "^8.0.0",
    "eslint-config-next": "14.2.31",
    "image-webpack-loader": "^8.0.1",
    "jest": "^29.7.0",
    "jest-environment-jsdom": "^29.7.0",
    "kill-port": "^2.0.1",
    "lighthouse": "^12.8.1",
    "prettier": "^3.0.0",
    "prettier-plugin-tailwindcss": "^0.6.14",
    "prisma": "^5.0.0",
    "serve": "^14.2.1",
    "size-limit": "^11.0.0",
    "tsx": "^4.0.0",
    "typescript": "^5.9.2",
    "wait-on": "^8.0.4",
    "whatwg-fetch": "^3.6.20"
  },
  "engines": {
    "node": ">=20",
    "npm": ">=9.0.0"
  },
  "prisma": {
    "seed": "tsx prisma/seed.ts"
  }
}
