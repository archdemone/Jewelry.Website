name: CI and Deploy

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: ci-deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  ci:
    runs-on: ubuntu-latest
    env:
      NODE_ENV: production
      NEXT_TELEMETRY_DISABLED: 1
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install deps
        run: npm ci

      - name: Generate Prisma client
        run: npx prisma generate

      - name: Type check (CI-safe)
        run: npm run type-check:ci

      - name: Lint
        run: npm run lint:ci

      - name: Build
        run: npm run build

      - name: Create .env.production for runtime
        run: |
          {
            echo "NODE_ENV=production"
            echo "NEXTAUTH_URL=${{ secrets.NEXTAUTH_URL || 'http://localhost:4000' }}"
            echo "NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET || 'ci-secret' }}"
            echo "DATABASE_URL=${{ secrets.DATABASE_URL || 'file:./ci.db' }}"
            echo "NEXT_PUBLIC_SITE_URL=http://localhost:4000"
          } > .env.production

      - name: Start standalone server on :4000 (background)
        run: |
          nohup node .next/standalone/server.js > server.log 2>&1 & echo $! > server.pid
          sleep 5

      - name: Smoke test (/, /api/healthz)
        run: |
          npx wait-on -t 60000 http://localhost:4000/
          code=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:4000/) && echo "/ -> $code" && test "$code" = "200"
          code2=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:4000/api/healthz || echo 000) && echo "/api/healthz -> $code2" && test "$code2" = "200"

      - name: Tail server log on failure
        if: failure()
        run: tail -n 200 server.log || true

      - name: Stop server
        if: always()
        run: kill "$(cat server.pid)" || true

  deploy:
    needs: ci
    if: github.ref == 'refs/heads/main' && success()
    runs-on: ubuntu-latest
    env:
      NODE_ENV: production
      NEXT_TELEMETRY_DISABLED: 1
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install deps
        run: npm ci

      - name: Generate Prisma client
        run: npx prisma generate

      - name: Build for deployment
        run: npm run build

      - name: Export artifact
        uses: actions/upload-artifact@v4
        with:
          name: next-build
          path: |
            .next
            package.json
            package-lock.json
            next.config.js
            public
            .env.example

      # Vercel deployment will be added when ready for production
