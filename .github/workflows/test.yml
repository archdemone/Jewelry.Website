name: Test Suite

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma Client
        run: npx prisma generate

      - name: Setup test environment
        run: |
          echo "DATABASE_URL=file:./test.db" >> $GITHUB_ENV
          echo "NEXTAUTH_URL=http://localhost:3000" >> $GITHUB_ENV
          echo "NEXTAUTH_SECRET=test-secret-key" >> $GITHUB_ENV
          echo "STRIPE_SECRET_KEY=sk_test_123" >> $GITHUB_ENV
          echo "NEXT_PUBLIC_STRIPE_PUBLIC_KEY=pk_test_123" >> $GITHUB_ENV

      - name: Prepare test database
        run: |
          npx prisma migrate deploy
          npx prisma db seed
        env:
          DATABASE_URL: file:./test.db

      - name: Cache Playwright
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/package-lock.json') }}

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Cache Cypress
        uses: actions/cache@v4
        with:
          path: ~/.cache/Cypress
          key: ${{ runner.os }}-cypress-${{ hashFiles('**/package-lock.json') }}

      - name: Install Cypress binary
        run: npx cypress install

      - name: Run unit tests
        run: npm run test:ci
        env:
          DATABASE_URL: file:./test.db

      - name: Build and start app
        run: |
          npm run build
          npm run start &
          npx wait-on http://localhost:3000
        env:
          DATABASE_URL: file:./test.db

      - name: Run Playwright E2E tests
        run: npm run test:e2e
        env:
          DATABASE_URL: file:./test.db

      - name: Run Cypress E2E tests
        run: npm run cypress:run
        env:
          DATABASE_URL: file:./test.db

      - name: Run Lighthouse
        run: npm run test:lighthouse
        env:
          DATABASE_URL: file:./test.db

      - name: Upload coverage
        uses: codecov/codecov-action@v4
