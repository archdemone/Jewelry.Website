name: Performance & Bundle Analysis

on:
  pull_request:
    branches: [main, develop]
  push:
    branches: [main]

jobs:
  bundle-analysis:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Run bundle size analysis
        run: npm run size-limit

      - name: Upload bundle analysis
        if: github.event_name == 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: bundle-analysis
          path: .next/analyze/

  lighthouse:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Start application
        run: npm start &
        env:
          PORT: 3000

      - name: Wait for application
        run: npx wait-on http://localhost:3000

      - name: Run Lighthouse CI
        run: |
          npx lighthouse http://localhost:3000 \
            --output=json \
            --output-path=./lighthouse-report.json \
            --only-categories=performance \
            --chrome-flags="--headless --no-sandbox --disable-dev-shm-usage" \
            --preset=perf

      - name: Upload Lighthouse report
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-report
          path: lighthouse-report.json

      - name: Check performance thresholds
        run: |
          # Extract performance scores from Lighthouse report
          LCP=$(node -e "const report = require('./lighthouse-report.json'); console.log(report.audits['largest-contentful-paint'].numericValue / 1000);")
          FCP=$(node -e "const report = require('./lighthouse-report.json'); console.log(report.audits['first-contentful-paint'].numericValue / 1000);")
          CLS=$(node -e "const report = require('./lighthouse-report.json'); console.log(report.audits['cumulative-layout-shift'].numericValue);")
          
          echo "LCP: ${LCP}s (target: <3.5s)"
          echo "FCP: ${FCP}s (target: <2.5s)"
          echo "CLS: ${CLS} (target: <0.1)"
          
          # Check thresholds using Node.js (temporarily more lenient)
          node -e "
            const lcp = parseFloat('$LCP');
            const fcp = parseFloat('$FCP');
            const cls = parseFloat('$CLS');
            
            let failed = false;
            
            if (lcp > 3.5) {
              console.log('❌ LCP exceeds 3.5s threshold');
              failed = true;
            }
            
            if (fcp > 2.5) {
              console.log('❌ FCP exceeds 2.5s threshold');
              failed = true;
            }
            
            if (cls > 0.1) {
              console.log('❌ CLS exceeds 0.1 threshold');
              failed = true;
            }
            
            if (!failed) {
              console.log('✅ All performance thresholds met');
            }
            
            process.exit(failed ? 1 : 0);
          "

  web-vitals:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Type check
        run: npm run type-check

      - name: Lint
        run: npm run lint

      - name: Test Web Vitals implementation
        run: |
          # Check if reportWebVitals is properly exported
          if ! grep -q "export.*reportWebVitals" src/app/layout.tsx; then
            echo "❌ reportWebVitals not exported from layout.tsx"
            exit 1
          fi
          
          # Check if vitals API route exists
          if [ ! -f "src/app/api/analytics/vitals/route.ts" ]; then
            echo "❌ Web Vitals API route not found"
            exit 1
          fi
          
          echo "✅ Web Vitals implementation verified"
